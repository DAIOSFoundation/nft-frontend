[{"/Users/daib-01/WebstormProjects/nft-frontend/src/index.js":"1","/Users/daib-01/WebstormProjects/nft-frontend/src/reportWebVitals.js":"2","/Users/daib-01/WebstormProjects/nft-frontend/src/App.js":"3"},{"size":535,"mtime":1653733813843,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1653716633455,"results":"6","hashOfConfig":"5"},{"size":2932,"mtime":1653872421089,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1klcrc8",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/daib-01/WebstormProjects/nft-frontend/src/index.js",[],[],[],"/Users/daib-01/WebstormProjects/nft-frontend/src/reportWebVitals.js",[],[],"/Users/daib-01/WebstormProjects/nft-frontend/src/App.js",["19"],[],"import logo from './logo.svg';\nimport './App.css';\nimport contract from './contracts/ExampleNFT.json';\nimport {useEffect, useState} from \"react\";\n\nconst { ethers } = require(\"ethers\");\n\nconst PK = \"2cda07fd36def97a9edf2b3fbd831a414c5f68a31654a34782fccf782a1d8e4c\"\nconst NODE_URL = \"https://rpc-mumbai.matic.today\";\nconst PROVIDER = new ethers.providers.JsonRpcProvider(NODE_URL);\nconst CONTRACT_ADDRESS = \"0xFfC629A2a7A3375ce447a3771c223EcdD44f6772\"\nconst ABI = contract.abi;\nconst META_DATA_URL = \"http://localhost:8081/metaNFTs/\"\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {ethereum} = window;\n    if (!ethereum) {\n      console.log((\"메타마스크가 설치되어 있는지 확인하세요.\"));\n      return;\n    } else {\n      console.log(\"지갑이 확인되었습니다.\")\n    }\n\n    const accounts = await ethereum.request({method: 'eth_accounts'});\n    if (accounts.left !== 0) {\n      const account = accounts[0];\n      console.log(\"인증된 계좌 : \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"인증된 계좌가 없습니다.\");\n    }\n  }\n\n  const connectWalletHandler = async () => {\n    const {ethereum} = window;\n    if (!ethereum) {\n      alert(\"메타마스크를 설치하세요.\")\n    }\n\n    try {\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      console.log(\"계좌주소 : \", accounts[0])\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const mintNftHandler = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const wallet = new ethers.Wallet(PK, PROVIDER);\n        const signer = wallet.provider.getSigner(wallet.address);\n        const contract = new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n\n        let nftTxn = await contract.mintNFT(CONTRACT_ADDRESS, META_DATA_URL);\n\n        console.log(\"민팅중이니 기다리세요...\");\n        await nftTxn.wait();\n\n        console.log(`성공!, 트랜젝션을 확인하세요 : https://mumbai.polygonscan.com//tx/${nftTxn.hash}`);\n\n      } else {\n        console.log(\"트랜젝션이 확인되지 않습니다.\");\n      }\n\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const connectWalletButton = () => {\n    return (\n        <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n          Connect Wallet\n        </button>\n    )\n  }\n\n  const mintNftButton = () => {\n    return (\n        <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n          Mint NFT\n        </button>\n    )\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, [])\n\n  return (\n      <div className='main-app'>\n        <h1>Scrappy Squirrels Tutorial</h1>\n        <div>\n          {currentAccount ? mintNftButton() : connectWalletButton()}\n        </div>\n      </div>\n  )\n}\n\nexport default App;\n",{"ruleId":"20","severity":1,"message":"21","line":1,"column":8,"nodeType":"22","messageId":"23","endLine":1,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]